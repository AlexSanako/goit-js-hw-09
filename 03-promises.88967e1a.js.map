{"mappings":"YAAA,SAASA,EAAcC,EAAUC,EAAOC,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLJ,EACFE,EAAQ,CAAEJ,WAAUC,UAEpBI,EAAO,CAAEL,WAAUC,S,GAEpBA,E,IAIP,IAAMM,EAAOC,SAASC,cAAc,SAEpCF,EAAKG,iBAAiB,UAAU,SAACC,GAC/BA,EAAMC,iBAQN,IANA,IAAMC,EAAQC,SAASP,EAAKQ,SAASd,MAAMe,OACrCC,EAAOH,SAASP,EAAKQ,SAASE,KAAKD,OACnCE,EAASJ,SAASP,EAAKQ,SAASG,OAAOF,OAEvCG,EAAW,GAERC,EAAI,EAAGA,EAAIF,EAAQE,IAAK,CAC/B,IAGMC,EAAUtB,EAHCqB,EAAI,EACAP,EAAQO,EAAIH,EACXK,KAAKC,SAAW,IAEtCJ,EAASK,KAAKH,E,CAGhBF,EAASM,SAAQ,SAACJ,GAChBA,EACGK,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjB2B,QAAQC,IAAI,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAE3D8B,OAAM,SAAAJ,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClB2B,QAAQC,IAAI,sBAAuCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay, shouldResolve) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n\n  const delay = parseInt(form.elements.delay.value);\n  const step = parseInt(form.elements.step.value);\n  const amount = parseInt(form.elements.amount.value);\n\n  const promises = [];\n\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const promiseDelay = delay + i * step;\n    const shouldResolve = Math.random() > 0.3;\n    const promise = createPromise(position, promiseDelay, shouldResolve);\n    promises.push(promise);\n  }\n\n  promises.forEach((promise) => {\n    promise\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  });\n});\n\n\n\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\n\n\n// function createPromise(position, delay, shouldResolve) {\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve({ position, delay });\n//       } else {\n//         reject({ position, delay });\n//       }\n//     }, delay);\n//   });\n// }\n\n// const form = document.querySelector(\".form\");\n\n// form.addEventListener(\"submit\", (event) => {\n//   event.preventDefault();\n\n//   const delay = parseInt(form.elements.delay.value);\n//   const step = parseInt(form.elements.step.value);\n//   const amount = parseInt(form.elements.amount.value);\n\n//   const promises = [];\n\n//   for (let i = 0; i < amount; i++) {\n//     const position = i + 1;\n//     const promiseDelay = delay + i * step;\n//     const shouldResolve = Math.random() > 0.3;\n//     const promise = createPromise(position, promiseDelay, shouldResolve);\n//     promises.push(promise);\n//   }\n\n//   Promise.allSettled(promises).then((results) => {\n//     results.forEach((result) => {\n//       const { position, delay } = result.value || result.reason;\n//       if (result.status === \"fulfilled\") {\n//         console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//       } else {\n//         console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//       }\n//     });\n//   });\n// });"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","event","preventDefault","delay1","parseInt","elements","value","step","amount","promises","i","promise","Math","random","push","forEach","then","param","console","log","concat","catch"],"version":3,"file":"03-promises.88967e1a.js.map"}